lang=Turkish
langCode=tr
# commands/functions and their inputs
clear=sil
visible=görünür
invisible=görünmez
forward=ileri
steps=adım
right=sağ
angle=açı
left=sol
jumpTo=atla
moveTo=ilerle
hop=zıpla
home=ev
towards=noktayaDön
setHeading=açıyaDön
heading=doğrultu
east=doğu
west=batı
north=kuzey
south=güney
delay=canlandırmaHızınıKur
milliSeconds=milisaniye
write=yazı
text=yazı
setPenFontSize=yazıBoyunuKur
size=boyutKur
arc=yay
circle=daire
radius=yarıçap
position=konum
penDown=kalemiİndir
penUp=kalemiKaldır
isPenDown=kalemİnikMi
setPenColor=kalemRenginiKur
setFillColor=boyamaRenginiKur
color=renk
setPenThickness=kalemKalınlığınıKur
width=en
saveStyle=biçimleriBelleğeYaz
restoreStyle=biçimleriGeriYükle
savePositionHeading=konumVeYönüBelleğeYaz
restorePositionHeading=konumVeYönüGeriYükle
beamsOn=ışınlarıAç
beamsOff=ışınlarıKapat
setCostume=giysiKur
setCostumes=giysileriKur
fileName=dostaAdı
nextCostume=birsonrakiGiysi
Turtle=Kaplumbağa
turtle=kaplumbağa
clearOutput=çıktıyıSil
blue=mavi
red=kırmızı
yellow=sarı
green=yeşil
purple=mor
pink=pembe
brown=kahverengi
black=siyah
white=beyaz
noColor=renksiz
gray=gri
darkGray=koyuGri
lightGray=açıkGri
orange=turuncu
magenta=morumsu
cyan=camgöbeği
setBackground=arkaplanıKur
setBackgroundV=arkaplanıKurDik
setBackgroundH=arkaplanıKurYatay
repeat=yinele
repeati=yineleDizinli
count=say
repeatWhile=yineleDogruysa
repeatFor=yineleKere
sequence=dizi
condition=koşul
readln=satıroku
prompt=istem
print=yaz
println=satıryaz
round=yuvarla
number=sayı
digits=basamaklar
random=rasgele
randomDouble=rasgeleKesir
upperBound=üstSınır
setSpeed=hızıKur
slow=yavaş
medium=orta
fast=hızlı
superFast=çokHızlı

# some type aliases
# 
# Ref: https://docs.scala-lang.org/overviews/scala-book/built-in-types.html
Boolean=İkil

# We have Byte/Short/Int/Long which all default to Int and BigInt
#   val n = 1

# Sayma sayıları
  Byte=Lokma
 Short=Kısa
   Int=Sayı
  Long=Uzun
BigInt=İriSayı

# We have Float/Double which default to Double and BigDecimal
#   val x = 1.0

# Kesirli sayılar
     Float=UfakKesir
    Double=Kesir
BigDecimal=İriKesir

# Yazı
  Char=Harf
String=Dizi

# output pane welcome message on Kojo startup
welcome=Kaplumbağalı Kojo'ya Hoşgeldin!
welcomeScratchpad=Kojo Deneme Tahtasını kapatınca geçmiş silinir.

# online help in html format
forwardHelp=<div><strong>ileri</strong>(adımSayısı) - Bu komut kaplumbağaya verilen sayı kadar adım attırır ve baktığı doğrultuda ilerletir. </div>
# multi line html needs a '\' at the end of the line
leftHelp=<div> \
      <strong>sol</strong>() - Bu komut kaplumbağayı olduğu yerde sola doğru (saat yönünün tersine doğru) 90 derece döndürür. <br/> \
      <strong>sol</strong>(derece) - Bu komut kaplumbağayı olduğu yerde sola doğru (saat yönünün tersine) verilen derece kadar döndürür. <br/> \
      <strong>sol</strong>(derece, yarıçap) - Bu komut kaplumbağayı verilen yarıçaplı bir yay üzerinde sola doğru (saat yönünün tersine doğru) verilen derece kadar döndürerek ilerletir. <br/> \
</div>
rightHelp=<div> \
      <strong>sağ</strong>() - Bu komut kaplumbağayı sağa doğru (saat yönününde) 90 derece döndürür. <br/> \
      <strong>sağ</strong>(derece) - Bu komut kaplumbağayı sağa doğru (saat yönünde) verilen derece kadar döndürür. <br/> \
      <strong>sağ</strong>(derece, yarıçap) - Bu komut kaplumbağayı verilen yarıçaplı bir yay üzerinde sağa doğru (saat yönünde) verilen derece kadar döndürerek ilerletir. <br/> \
</div>
jumpToHelp=<div> \
      <strong>atla</strong>(x, y) - Bu komut kaplumbağayı çizgi çizmeden (x, y) noktasına götürür. Kaplumbağanın yönü değişmez. <br/> \
</div>
moveToHelp=<div><strong>ilerle</strong>(x, y) - Bu komut kaplumbağanın yönünü (x, y) noktasına çevirir ve o noktaya kadar götürür. </div>
hopHelp=<div> \
      <strong>zıpla</strong>(adımSayısı) - Bu komut <em>kalemi kaldırıp</em> kaplumbağayı verilen adım kadar ilerletir, \
      böylece çizgi çizilmemiş olur. Sonra da kalemi indirir ki arkadan gelen komutlar çizmeye devam etsin. <br/> \
</div>
homeHelp=<div><strong>ev</strong>() - Bu komut kaplumbağayı başlangıç noktasına götürür ve yönünü kuzeye çevirir. </div>
towardsHelp=<div><strong>noktayaDön</strong>(x, y) - Bu komut kaplumbağayı (x, y) noktasına çevirir. </div>
setHeadingHelp=<div><strong>açıyaDön</strong>(angle) - Bu komut kaplumbağayı verilen açıya çevirir. (0 derece ekranın sağına bakar (<em>doğu</em>), 90 yukarı (<em>kuzey</em>)).</div>
headingHelp=<div><strong>doğrultu</strong> - Bu komut kaplumbağanın yönünü bildirir. (0 derece ekranın sağına bakar (<em>doğu</em>), 90 yukarı (<em>kuzey</em>)).</div>
eastHelp=<div><strong>doğu</strong>() - Bu komut kaplumbağayı doğuya çevirir. </div>
westHelp=<div><strong>batı</strong>() - Bu komut kaplumbağayı batıya çevirir. </div>
northHelp=<div><strong>kuzey</strong>() - Bu komut kaplumbağayı kuzeye çevirir. </div>
southHelp=<div><strong>güney</strong>() - Bu komut kaplumbağayı güneye çevirir. </div>
delayHelp=<div> \
      <strong>canlandırmaHızınıKur</strong>(süre) - Bu komut kaplumbağanın hızını belirler. Verilen süre milisaniye olarak \
      kaplumbağanın yüz adım atması için gereken süreyi belirler.<br/> \
      Başlangıç değeri 1000 milisaniye yani 1 saniyedir.<br/> \
</div>
writeHelp=<div><strong>yaz</strong>(nesne) - Bu komut kaplumbağanın durduğu yere verilen nesnenin yazı olarak karşılığını yazar. </div>
setPenFontSizeHelp=<div><strong>yazıBoyunuKur</strong>(sayı) - Bu komut kaplumbağanın yazı tipinin boyunu belirler. </div>
arcHelp=<div> \
        <strong>yay</strong>(yarıçap, açı) - Bu komut kaplumbağaya verilen yarıçaplı dairenin verilen açı büyüklüğündeki yayını çizdirir. <br/> \
        Artı açılar sola doğru (saat yönünün tersine), eksi açılar da sağa doğru (saat yönünde) çizilir. <br/> \
</div>
circleHelp=<div> \
        <strong>daire</strong>(yarıçap) - Bu komut kaplumbağaya yarıçapı verilen daireyi çizdirir. <br/> \
        <tt>daire(50)</tt> komutu <tt>yay(50, 360)</tt> komutuyla aynı işleve sahiptir (yani aynı işi yapar!).<br/> \
</div>
visibleHelp=<div><strong>görünür</strong>() - Bu komut <tt>görünmez()</tt> komutuyla saklanan kaplumbağayı tekrar ortaya çıkarır. </div>
invisibleHelp=<div><strong>görünmez</strong>() - Bu komut kaplumbağayı görünmez kılar. Kaplumbağamızı <tt>görünür()</tt> komutuyla tekrar ortaya çıkarabilirsiniz.</div>
penDownHelp=<div> \
      <strong>kalemiİndir</strong>() - Bu komut kaplumbağanın kalemini indirerek sonraki komutlarla ilerlediğinde çizgi çizmesini sağlar.<br/> \
      Başlangıçta kalem inik durumdadır. br/> \
</div>
penUpHelp=<div><strong>kalemiKaldır</strong>() - Bu komut kaplumbağanın kalemini kaldır. Kaplumbağa bundan sonra ilerlerken çizgi çizmez. <br/></div>
isPenDownHelp=<div><strong>kalemİnikMi</strong> - Bu komut kalemin inik olup olmadığını bildirir. </div>
setPenColorHelp=<div><strong>kalemRenginiKur</strong>(renk) - Bu komut kaplumbağanın çizim yapmakta kullandığı kalemin rengini belirler. <br/></div>
setFillColorHelp=<div><strong>boyamaRenginiKur</strong>(renk) - Bu komut kaplumbağanın çizdiği şekillerin içini boyamak için kullandığı kalemin rengini belirler. <br/></div>
setPenThicknessHelp=<div><strong>kalemKalınlığınıKur</strong>(thickness) - Bu komut kaplumbağanın çizim yapmakta kullandığı kalemin kalınlığını belirler.<br/></div>
saveStyleHelp=<div> \
      <strong>biçimleriBelleğeYaz</strong>() - Bu komut kaplumbağanın o anda kullandığı biçimleri belleğe yazarak daha sonra \
      <tt>biçimleriGeriYükle()</tt> komutuyla kolaylıkla eski duruma dönülmesine yarar. \
      Kaplumbağamızın biçimlerini kısa bir süre için değiştirip sonra eski hale kolayca dönmek için bu komutu kullanırız. \
      Bu yolla iki farklı çizim biçimi arasında gidip gelmek kolaylaşır. <br/> \
      <p> \
        Kaplumbağanın belleğe yazılan biçimleri şunlardır: \
        <ul> \
          <li>Kalem Rengi</li> \
          <li>Kalem Kalınlığı</li> \
          <li>Boyama Rengi</li> \
          <li>Kalem Yazısı</li> \
          <li>Kalem İnik mi Kalkık mı</li> \
        </ul> \
      </p> \
</div>
restoreStyleHelp=<div> \
      <strong>biçimleriGeriYükle</strong>() - Bu komut daha önce kullanılan <tt>biçimleriBelleğeYaz()</tt> komutuyla kaydedilen kaplumbağa biçimlerini geri yükler. <br/> \
      <p> \
        Kaplumbağanın bellekte yazılı olan biçimleri şunlardır: \
        <ul> \
          <li>Kalem Rengi</li> \
          <li>Kalem Kalınlığı</li> \
          <li>Boyama Rengi</li> \
          <li>Kalem Yazısı</li> \
          <li>Kalem İnik mi Kalkık mı</li> \
        </ul> \
      </p> \
</div>
savePositionHeadingHelp=<div> \
      <strong>konumVeYönüBelleğeYaz</strong>() - Bu komut kaplumbağanın o anki konum ve yönünü belleğe kaydeder ki yerini ve yönünü değiştiren komutlarla gittiği yeni konumdan ve yönden <tt>konumVeYönüGeriYükle()</tt> komutuyla kolaylıkla geri dönebilelim. <br/> \
</div>
restorePositionHeadingHelp=<div> \
      <strong>konumVeYönüGeriYükle</strong>() - Bu komut kaplumbağayı daha önce kullanılan <tt>konumVeYönüBelleğeYaz()</tt> komutuyla kaydedilen konum ve doğrultuya geri götürür. <br/> \
</div>
beamsOnHelp=<div><strong>ışınlarıAç</strong>() - Bu komut kaplumbağanın önünü, arkasını, sağını ve solunu bir artı çizerek daha kolay seçmemizi sağlar.</div>
beamsOffHelp=<div><strong>ışınlarıKapat</strong>() - Bu komut <tt>ışınlarıAç()</tt> komutuyla kaplumbağanın üstüne çizilen artıyı siler.</div>
clearHelp=<div><strong>sil</strong>() - Bu komut kaplumbağanın tuvalini temizler, kaplumbağayı başlangıç konumuna geri getirir ve kuzey doğrultusuna çevirir.</div>
clearOutputHelp=<div><strong>çıktıyıSil</strong>() - Bu komut çıktı penceresindeki bütün çıktıları silerek temizler. </div>
setBackgroundHelp=<div> \
      <strong>arkaplanıKur</strong>(renk) - Bu komutla tuval verilen renge boyanır. \
      Kojo'nun bildiği sarı, mavi ve siyah gibi renkleri kullanabilirsiniz ya da <tt>Color</tt>, <tt>ColorHSB</tt> ve <tt>ColorG</tt> komutlarını kullanarak kendi renklerinizi yaratabilirsiniz. \
</div> 
setBackgroundVHelp=<div><strong>arkaplanıKurDik</strong>(renk1, renk2) - Bu komutla tuval aşağıdan yukarı doğru birinci renkten ikinci renge derece derece değişerek boyanır. \
</div>
setBackgroundHHelp=<div><strong>arkaplanıKurYatay</strong>(renk1, renk2) - Bu komutla tuval soldan sağa doğru birinci renkten ikinci renge derece derece değişerek boyanır. \
</div>
repeatHelp=<div><strong>yinele</strong>(sayı){{ }} - Bu komut küme içine alınan komutları verilen sayı kadar tekrar tekrar çağırır. <br/></div>
repeatiHelp=<div><strong>yineleDizinli</strong>(sayı) {{i => }} - Bu komut, küme içine alılan komutları verilen sayı kadar tekrar tekrar çağırır. \
      Kaçıncı yineleme olduğunu <tt>i</tt> değişkenini küme içinde kullanarak görebiliriz. \
</div>
repeatWhileHelp=<div><strong>yineleDogruysa</strong>(koşul) {{ }} - Bu komut küme içine alılan komutları verilen koşul doğru oldukça tekrar çağırır. <br/></div>
repeatForHelp=<div><strong>yineleKere</strong>(dizi){{ }} - Bu komut küme içine alılan komutları verilen dizideki her eleman için birer kere çağırır. <br/></div>
printlnHelp=<div><strong>satıryaz</strong>(obj) - Bu komut verilen nesneyi harf dizisi olarak çıktı penceresine yazar ve yeni satıra geçer. </div>
readlnHelp=<div><strong>satıroku</strong>(istemDizisi) - Bu komut verilen istem dizisini çıktı penceresine yazar ve arkasından sizin yazdığınız bir satırı okur. </div>
roundHelp=<div><strong>yuvarla</strong>(sayı, basamak) - Bu komut verilen sayıyı noktadan sonra verilen basamak sayısına kadar yuvarlar. </div>
randomHelp=<div><strong>rasgele</strong>(üstsınır) - Bu komut verilen üst sınırdan küçük rastgele bir doğal sayı verir. Sıfırdan küçük sayılar vermez. </div>
randomDoubleHelp=<div><strong>rasgeleÇift</strong>() - Bu komut verilen üst sınırdan küçük rastgele bir kesirli sayı (çift çözünürlüklü) verir. Sıfırdan küçük sayılar vermez. </div>
setCostumeHelp=<div><strong>giysiKur</strong>(giysiDosyası) - Kaplumbağanın görünüşünü verilen dosyadaki resimle değiştirir. </div>
setCostumesHelp=<div><strong>giysilerKur</strong>(giysiDosyası1, giysiDosyası2, ...) - Kaplumbağa için bir dizi giysi belirler ve giysiDosyası1 resmini giydirir. \
      <tt>birSonrakiGiysi()</tt> komutuyla dizideki bir sonraki giysiyi giydirebiliriz. \
</div>
nextCostumeHelp=<div><strong>birSonrakiGiysi</strong>() - Kaplumbağaya <tt>giysilerKur()</tt> komutuyla girilen giysi dizisindeki bir sonraki resmi giydirir. </div>
